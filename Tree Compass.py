# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qBViAfENgDcfDNAsMmCgHg6iejhs2Eve
"""

from collections import deque

t = int(input())
for _ in range(t):
    n = int(input())
    edges = [[] for _ in range(n+1)]
    for _ in range(n-1):
        u, v = map(int, input().split())
        edges[u].append(v)
        edges[v].append(u)

    # BFS from root=1
    dist = [-1]*(n+1)
    dist[1] = 0
    q = deque([1])
    while q:
        u = q.popleft()
        for v in edges[u]:
            if dist[v] == -1:
                dist[v] = dist[u]+1
                q.append(v)

    max_dist = max(dist[1:])
    print(max_dist+1)  # number of operations

    # Output operations
    for d in range(max_dist+1):
        print(1, d)