# -*- coding: utf-8 -*-
"""Rudolf and the Ball Game.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qBViAfENgDcfDNAsMmCgHg6iejhs2Eve
"""

import sys
input = sys.stdin.readline

def move_cw(player, ri, n):
    return (player + ri - 1) % n + 1

def move_ccw(player, ri, n):
    return (player - ri - 1 + n) % n + 1

def solve():
    t = int(input())
    for _ in range(t):
        n, m, x = map(int, input().split())
        throws = [input().split() for _ in range(m)]

        # Initialize possible positions
        possible = [False] * (n + 1)
        possible[x] = True

        for ri, ci in throws:
            ri = int(ri)
            new_possible = [False] * (n + 1)

            for i in range(1, n + 1):
                if possible[i]:
                    if ci == '0' or ci == '?':
                        new_possible[move_cw(i, ri, n)] = True
                    if ci == '1' or ci == '?':
                        new_possible[move_ccw(i, ri, n)] = True
            possible = new_possible

        # Collect results
        result = [i for i in range(1, n + 1) if possible[i]]
        print(len(result))
        print(*result)

if __name__ == "__main__":
    solve()