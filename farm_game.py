# -*- coding: utf-8 -*-
"""Farm Game.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qBViAfENgDcfDNAsMmCgHg6iejhs2Eve
"""

MOD = 998244353
MAX = 10**6 + 10

# Precompute factorials and inverse factorials
fact = [1] * (MAX)
inv_fact = [1] * (MAX)

for i in range(1, MAX):
    fact[i] = fact[i-1] * i % MOD

inv_fact[MAX-1] = pow(fact[MAX-1], MOD-2, MOD)
for i in range(MAX-2, -1, -1):
    inv_fact[i] = inv_fact[i+1] * (i+1) % MOD

def comb(n, k):
    if k < 0 or k > n:
        return 0
    return fact[n] * inv_fact[k] % MOD * inv_fact[n-k] % MOD

t = int(input())
for _ in range(t):
    l, n = map(int, input().split())
    if l < 2 * n:
        print(0)
    else:
        print(comb(l - n + 1, n))