# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qBViAfENgDcfDNAsMmCgHg6iejhs2Eve
"""

MOD = 10**9 + 7

def max_sum_after_operations(n, k, a):
    total = sum(a)

    # Kadane's algorithm to find max subarray sum
    max_ending_here = max_so_far = 0
    for x in a:
        max_ending_here = max(0, max_ending_here + x)
        max_so_far = max(max_so_far, max_ending_here)

    # If all numbers are negative, max_so_far = 0, then only total matters
    result = (total + max_so_far * k) % MOD
    return result

# Reading input
import sys
input = sys.stdin.read
data = input().split()

t = int(data[0])
idx = 1
results = []

for _ in range(t):
    n = int(data[idx])
    k = int(data[idx + 1])
    idx += 2
    a = list(map(int, data[idx: idx + n]))
    idx += n
    results.append(max_sum_after_operations(n, k, a))

print('\n'.join(map(str, results)))