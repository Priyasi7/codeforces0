# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qBViAfENgDcfDNAsMmCgHg6iejhs2Eve
"""

def kirill_and_mushrooms():
    import sys
    input = sys.stdin.read
    data = input().split()

    t = int(data[0])
    idx = 1
    results = []

    for _ in range(t):
        n = int(data[idx]); idx += 1
        v = list(map(int, data[idx:idx+n])); idx += n
        p = list(map(int, data[idx:idx+n])); idx += n

        # Convert permutation to 0-based index
        p = [x-1 for x in p]

        # Sort mushrooms by value descending along with their original index
        mushrooms = sorted([(v[i], i) for i in range(n)], reverse=True)

        max_strength = 0
        min_count = n

        max_idx = -1
        for power, i in mushrooms:
            max_idx = max(max_idx, p[i])
            count = max_idx + 1
            strength = count * power
            if strength > max_strength or (strength == max_strength and count < min_count):
                max_strength = strength
                min_count = count

        results.append(f"{max_strength} {min_count}")

    print("\n".join(results))