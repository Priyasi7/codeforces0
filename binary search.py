# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qBViAfENgDcfDNAsMmCgHg6iejhs2Eve
"""

def solve():
    import sys
    input = sys.stdin.read
    data = input().split()

    t = int(data[0])
    idx = 1
    res = []

    for _ in range(t):
        n = int(data[idx]); idx += 1
        x = int(data[idx]); idx += 1
        p = list(map(int, data[idx:idx+n])); idx += n

        sorted_p = sorted(p)

        # simulate binary search on sorted array to find target l
        l, r = 1, n+1
        while r-l > 1:
            m = (l+r)//2
            if sorted_p[m-1] <= x:
                l = m
            else:
                r = m

        # l is the final position (1-based) in sorted array
        if p[l-1] == x:
            res.append("0")
        else:
            # find current position of x
            pos_x = p.index(x) + 1  # 1-based index
            res.append("1")
            res.append(f"{l} {pos_x}")

    print("\n".join(res))