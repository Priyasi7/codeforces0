# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qBViAfENgDcfDNAsMmCgHg6iejhs2Eve
"""

import heapq

t = int(input())
for _ in range(t):
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    # Start from the end
    heap = []
    sum_b = 0
    ans = float('inf')

    # Process last (n-m+1) people to move into first m positions
    for i in range(n-1, -1, -1):
        heapq.heappush(heap, -b[i])  # max-heap using negatives
        sum_b += b[i]
        if len(heap) > m-1:
            sum_b += heapq.heappop(heap)  # remove largest b
        if len(heap) == m-1:
            # Candidate for first m positions
            ans = min(ans, a[i] + sum_b)

    print(ans)